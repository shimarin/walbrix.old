$require python3.lst
$package dev-python/lxml
$package app-emulation/xen-tools
$package app-emulation/xen-pvgrub
$package app-emulation/xen
$package dev-lang/ocaml --exclude='^/usr/lib(64)?/ocaml/((ocamldoc|ocamlbuild|compiler-libs)/|.+\.(cmx|cmxa|ml|mli|a|h)$)'
$package dev-ml/findlib
/var/lib/xen
/var/log/xen
#$symlink /usr/lib/xen/boot ../../libexec/xen/boot
#$sed /etc/init.d/xendomains 's/\(xl shutdown .*-w \)/\1-F /'
#$sed /etc/init.d/xenconsoled 's/\(xl shutdown .*-w \)/\1-F /'

$exec "systemctl enable xen-init-dom0"
$exec "systemctl enable xen-watchdog"
$exec "systemctl enable xenconsoled"
$exec "systemctl enable xendomains"
$exec "systemctl enable xenstored"

# pv(h)-grub2
#$write /tmp/grub.cfg 'set root=(xen/xvda1)\nnormal (xen/xvda1)/boot/grub/grub.cfg'
#$exec "grub-mkimage -c /tmp/grub.cfg -p /boot/grub -o /usr/libexec/xen/boot/pv-grub2-x86_64 -O x86_64-xen loopback xfs btrfs linux echo test gzio xzio probe configfile cpuid minicmd squash4 lsxen && gzip /usr/lib/xen/boot/pv-grub2-x86_64"
#$exec "grub-mkimage -c /tmp/grub.cfg -p /boot/grub -o /usr/libexec/xen/boot/pvh-grub2-x86_64 -O i386-xen_pvh loopback xfs btrfs linux echo test gzio xzio probe configfile cpuid minicmd squash4 && gzip /usr/lib/xen/boot/pvh-grub2-x86_64"

# use eth0 as the default network bridge
$sed /etc/xen/xl.conf 's/^#vif.default.bridge="xenbr0"$/vif.default.bridge=""/'

# setup network-bridge
#$copy walbrix/network-bridge /etc/xen/scripts/network-bridge
#$copy walbrix/network-multi-bridge /etc/xen/scripts/network-multi-bridge
